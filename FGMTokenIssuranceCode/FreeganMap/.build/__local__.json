{"manifest": "ethpm/3", "sources": {"Token.vy": {"urls": [], "checksum": {"algorithm": "md5", "hash": "0x123df40322479ea9a01b6bd998a0d2f3"}, "content": "# @version 0.3.3\n\nfrom vyper.interfaces import ERC20\n\nimplements: ERC20\n\n# ERC20 Token Metadata\nNAME: constant(String[20]) = \"FGM\"\nSYMBOL: constant(String[5]) = \"$FGM\"\nDECIMALS: constant(uint8) = 9\n\n# ERC20 State Variables\ntotalSupply: public(uint256)\nbalanceOf: public(HashMap[address, uint256])\nallowance: public(HashMap[address ,HashMap[address, uint256]])\n\n# Events\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    amount: uint256\n\nevent Approval: \n    owner: indexed(address)\n    spender: indexed(address)\n    amount: uint256 \n\nowner: public(address)\nisMinter: public(HashMap[address, bool]) \nnonces: public(HashMap[address, uint256])\nDOMAIN_SEPARATOR: public(bytes32)\nDOMAIN_TYPE_HASH: constant(bytes32) = keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)')\nPERMIT_TYPE_HASH: constant(bytes32) = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")\n\n@external\ndef __init__():\n    self.owner = msg.sender \n    self.totalSupply = 1000000000000000\n    self.balanceOf[msg.sender] = 1000000000000000 \n    # EIP-712\n    self.DOMAIN_SEPARATOR = keccak256(\n        concat(\n            DOMAIN_TYPE_HASH,\n            keccak256(NAME),\n            keccak256(\"1.0\"),\n            _abi_encode(chain.id, self)\n        )\n    )\n\n@pure\n@external\ndef name() -> String[20]:\n    return NAME\n\n@pure\n@external \ndef symbol() -> String[5]:\n    return SYMBOL\n\n@pure\n@external\ndef decimals() -> uint8:\n    return DECIMALS\n\n@external \ndef transfer(receiver: address, amount: uint256) -> bool:\n    self.balanceOf[msg.sender] -= amount\n    self.balanceOf[receiver] += amount\n\n    log Transfer(msg.sender, receiver, amount)\n    return True\n\n@external \ndef transferFrom(sender:address, receiver: address, amount: uint256) -> bool:\n    self.allowance[sender][msg.sender] -= amount\n    self.balanceOf[sender] -= amount\n    self.balanceOf[receiver] += amount\n\n    log Transfer(sender, receiver, amount)\n\n\n    return True\n\n@external\ndef approve(spender: address, amount: uint256) -> bool:\n    \"\"\"\n    @param spender The address that will execute on owner behalf.\n    @param amount The amount of token to be transfered.\n    \"\"\"\n    self.allowance[msg.sender][spender] = amount\n\n    log Approval(msg.sender, spender, amount)\n    \n    return True \n@external\ndef burn(amount: uint256):\n    \"\"\"\n    @notice Burns the supplied amount of tokens from the sender wallet.\n    @param amount The amount of token to be burned.\n    \"\"\"\n    self.balanceOf[msg.sender] -= amount\n    self.totalSupply -= amount\n\n    log Transfer(msg.sender, ZERO_ADDRESS, amount) \n@external\ndef mint(receiver: address, amount: uint256) -> bool:\n    \"\"\"\n    @notice Function to mint tokens\n    @param receiver The address that will receive the minted tokens.\n    @param amount The amount of tokens to mint.\n    @return A boolean that indicates if the operation was successful.\n    \"\"\"\n    \n    assert msg.sender == self.owner or self.isMinter[msg.sender], \"Access is denied.\"\n\n    self.totalSupply += amount\n    self.balanceOf[receiver] += amount\n\n    log Transfer(ZERO_ADDRESS, receiver, amount)\n    return True\n\n@external\ndef addMinter(minter: address):\n    assert msg.sender == self.owner\n    self.isMinter[msg.sender] = True\n@external\ndef permit(owner: address, spender: address, amount: uint256, expiry: uint256, signature: Bytes[65]) -> bool:\n    \"\"\"\n    @notice\n        Approves spender by owner's signature to expend owner's tokens.\n        See https://eips.ethereum.org/EIPS/eip-2612.\n    @param owner The address which is a source of funds and has signed the Permit.\n    @param spender The address which is allowed to spend the funds.\n    @param amount The amount of tokens to be spent.\n    @param expiry The timestamp after which the Permit is no longer valid.\n    @param signature A valid secp256k1 signature of Permit by owner encoded as r, s, v.\n    @return True, if transaction completes successfully\n    \"\"\"\n    assert owner != ZERO_ADDRESS  # dev: invalid owner\n    assert expiry == 0 or expiry >= block.timestamp  # dev: permit expired\n    nonce: uint256 = self.nonces[owner]\n    digest: bytes32 = keccak256(\n        concat(\n            b'\\x19\\x01',\n            self.DOMAIN_SEPARATOR,\n            keccak256(\n                _abi_encode(\n                    PERMIT_TYPE_HASH,\n                    owner,\n                    spender,\n                    amount,\n                    nonce,\n                    expiry,\n                )\n            )\n        )\n    )\n    # NOTE: signature is packed as r, s, v\n    r: uint256 = convert(slice(signature, 0, 32), uint256)\n    s: uint256 = convert(slice(signature, 32, 32), uint256)\n    v: uint256 = convert(slice(signature, 64, 1), uint256)\n    assert ecrecover(digest, v, r, s) == owner  # dev: invalid signature\n    self.allowance[owner][spender] = amount\n    self.nonces[owner] = nonce + 1\n    log Approval(owner, spender, amount)\n    return True\n", "references": [], "imports": []}}, "contractTypes": {"Token": {"contractName": "Token", "sourceId": "Token.vy", "deploymentBytecode": {"bytecode": "0x3360035566038d7ea4c6800060005566038d7ea4c6800060013360205260005260406000205560007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f816101e001526020810190507f67bc2614e54b61096c12cc61dd4186b80133fb879a711ebd4095e3292d5f7e4d816101e001526020810190507fe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3816101e001526020810190504661018052306101a052604061016052610160805160208201836101e0018281848460045afa9050505080830192505050806101c0526101c090508051602082012090506006556108d361010e6300000000396108d36000016300000000f3600436101561000d576108c8565b60003560e01c346108ce576306fdde0381186100985760208060805260036040527f46474d00000000000000000000000000000000000000000000000000000000006060526040816080018151808252602083016020830181518152505050805180602083010181600003601f163682375050601f19601f8251602001011690509050810190506080f35b6395d89b4181186101185760208060805260046040527f2446474d000000000000000000000000000000000000000000000000000000006060526040816080018151808252602083016020830181518152505050805180602083010181600003601f163682375050601f19601f8251602001011690509050810190506080f35b63313ce567811861012e57600960405260206040f35b63a9059cbb81186101ce576004358060a01c6108ce57604052600133602052600052604060002080546024358082106108ce578082039050905081555060016040516020526000526040600020805460243581818301106108ce5780820190509050815550604051337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3600160605260206060f35b6323b872dd81186102b5576004358060a01c6108ce576040526024358060a01c6108ce576060526002604051602052600052604060002080336020526000526040600020905080546044358082106108ce57808203905090508155506001604051602052600052604060002080546044358082106108ce578082039050905081555060016060516020526000526040600020805460443581818301106108ce57808201905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60443560805260206080a3600160805260206080f35b63095ea7b3811861032c576004358060a01c6108ce576040526024356002336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b6342966c6881186103a357600133602052600052604060002080546004358082106108ce57808203905090508155506000546004358082106108ce57808203905090506000556000337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60043560405260206040a3005b6340c10f1981186104ba576004358060a01c6108ce5760405260035433186103cc5760016103dc565b6004336020526000526040600020545b61043d5760116060527f4163636573732069732064656e6965642e0000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b60005460243581818301106108ce578082019050905060005560016040516020526000526040600020805460243581818301106108ce578082019050905081555060405160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3600160605260206060f35b63983b2d5681186104ef576004358060a01c6108ce5760405260035433186108ce576001600433602052600052604060002055005b639fd5a6cf8118610796576004358060a01c6108ce576040526024358060a01c6108ce5760605260843560040160418135116108ce5780358060805260208201818160a0375050506000604051146108ce576064351561055457426064351015610557565b60015b156108ce57600560405160205260005260406000205461010052600060026103c0527f19010000000000000000000000000000000000000000000000000000000000006103e0526103c0805160208201836105e00181518152505080830192505050600654816105e001526020810190507f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c96105005260405161052052606051610540526044356105605261010051610580526064356105a05260c06104e0526104e0805160208201209050816105e00152602081019050806105c0526105c09050805160208201209050610120526080516020116108ce5760a05161018052602061016052610160602081015181516020036008021c9050610140526080516040116108ce5760c0516101a052602061018052610180602081015181516020036008021c9050610160526080516041116108ce5760e0516101c05260016101a0526101a0602081015181516020036008021c905061018052604051610120516101a052610180516101c052610140516101e05261016051610200526020600060806101a060015afa50600051186108ce576044356002604051602052600052604060002080606051602052600052604060002090505561010051600181818301106108ce578082019050905060056040516020526000526040600020556060516040517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256044356101a05260206101a0a360016101a05260206101a0f35b6318160ddd81186107ad5760005460405260206040f35b6370a0823181186107e0576004358060a01c6108ce57604052600160405160205260005260406000205460605260206060f35b63dd62ed3e8118610832576004358060a01c6108ce576040526024358060a01c6108ce576060526002604051602052600052604060002080606051602052600052604060002090505460805260206080f35b638da5cb5b81186108495760035460405260206040f35b63aa271e1a811861087c576004358060a01c6108ce57604052600460405160205260005260406000205460605260206060f35b637ecebe0081186108af576004358060a01c6108ce57604052600560405160205260005260406000205460605260206060f35b633644e51581186108c65760065460405260206040f35b505b60006000fd5b600080fd"}, "runtimeBytecode": {"bytecode": "0x600436101561000d576108c8565b60003560e01c346108ce576306fdde0381186100985760208060805260036040527f46474d00000000000000000000000000000000000000000000000000000000006060526040816080018151808252602083016020830181518152505050805180602083010181600003601f163682375050601f19601f8251602001011690509050810190506080f35b6395d89b4181186101185760208060805260046040527f2446474d000000000000000000000000000000000000000000000000000000006060526040816080018151808252602083016020830181518152505050805180602083010181600003601f163682375050601f19601f8251602001011690509050810190506080f35b63313ce567811861012e57600960405260206040f35b63a9059cbb81186101ce576004358060a01c6108ce57604052600133602052600052604060002080546024358082106108ce578082039050905081555060016040516020526000526040600020805460243581818301106108ce5780820190509050815550604051337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3600160605260206060f35b6323b872dd81186102b5576004358060a01c6108ce576040526024358060a01c6108ce576060526002604051602052600052604060002080336020526000526040600020905080546044358082106108ce57808203905090508155506001604051602052600052604060002080546044358082106108ce578082039050905081555060016060516020526000526040600020805460443581818301106108ce57808201905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60443560805260206080a3600160805260206080f35b63095ea7b3811861032c576004358060a01c6108ce576040526024356002336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b6342966c6881186103a357600133602052600052604060002080546004358082106108ce57808203905090508155506000546004358082106108ce57808203905090506000556000337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60043560405260206040a3005b6340c10f1981186104ba576004358060a01c6108ce5760405260035433186103cc5760016103dc565b6004336020526000526040600020545b61043d5760116060527f4163636573732069732064656e6965642e0000000000000000000000000000006080526060506060518060800181600003601f1636823750506308c379a06020526020604052601f19601f6060510116604401603cfd5b60005460243581818301106108ce578082019050905060005560016040516020526000526040600020805460243581818301106108ce578082019050905081555060405160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3600160605260206060f35b63983b2d5681186104ef576004358060a01c6108ce5760405260035433186108ce576001600433602052600052604060002055005b639fd5a6cf8118610796576004358060a01c6108ce576040526024358060a01c6108ce5760605260843560040160418135116108ce5780358060805260208201818160a0375050506000604051146108ce576064351561055457426064351015610557565b60015b156108ce57600560405160205260005260406000205461010052600060026103c0527f19010000000000000000000000000000000000000000000000000000000000006103e0526103c0805160208201836105e00181518152505080830192505050600654816105e001526020810190507f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c96105005260405161052052606051610540526044356105605261010051610580526064356105a05260c06104e0526104e0805160208201209050816105e00152602081019050806105c0526105c09050805160208201209050610120526080516020116108ce5760a05161018052602061016052610160602081015181516020036008021c9050610140526080516040116108ce5760c0516101a052602061018052610180602081015181516020036008021c9050610160526080516041116108ce5760e0516101c05260016101a0526101a0602081015181516020036008021c905061018052604051610120516101a052610180516101c052610140516101e05261016051610200526020600060806101a060015afa50600051186108ce576044356002604051602052600052604060002080606051602052600052604060002090505561010051600181818301106108ce578082019050905060056040516020526000526040600020556060516040517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256044356101a05260206101a0a360016101a05260206101a0f35b6318160ddd81186107ad5760005460405260206040f35b6370a0823181186107e0576004358060a01c6108ce57604052600160405160205260005260406000205460605260206060f35b63dd62ed3e8118610832576004358060a01c6108ce576040526024358060a01c6108ce576060526002604051602052600052604060002080606051602052600052604060002090505460805260206080f35b638da5cb5b81186108495760035460405260206040f35b63aa271e1a811861087c576004358060a01c6108ce57604052600460405160205260005260406000205460605260206060f35b637ecebe0081186108af576004358060a01c6108ce57604052600560405160205260005260406000205460605260206060f35b633644e51581186108c65760065460405260206040f35b505b60006000fd5b600080fd"}, "abi": [{"type": "event", "name": "Transfer", "inputs": [{"name": "sender", "type": "address", "indexed": true}, {"name": "receiver", "type": "address", "indexed": true}, {"name": "amount", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "event", "name": "Approval", "inputs": [{"name": "owner", "type": "address", "indexed": true}, {"name": "spender", "type": "address", "indexed": true}, {"name": "amount", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "constructor", "stateMutability": "nonpayable", "inputs": []}, {"type": "function", "name": "name", "stateMutability": "pure", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "symbol", "stateMutability": "pure", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "decimals", "stateMutability": "pure", "inputs": [], "outputs": [{"name": "", "type": "uint8"}]}, {"type": "function", "name": "transfer", "stateMutability": "nonpayable", "inputs": [{"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "transferFrom", "stateMutability": "nonpayable", "inputs": [{"name": "sender", "type": "address"}, {"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "approve", "stateMutability": "nonpayable", "inputs": [{"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "burn", "stateMutability": "nonpayable", "inputs": [{"name": "amount", "type": "uint256"}], "outputs": []}, {"type": "function", "name": "mint", "stateMutability": "nonpayable", "inputs": [{"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "addMinter", "stateMutability": "nonpayable", "inputs": [{"name": "minter", "type": "address"}], "outputs": []}, {"type": "function", "name": "permit", "stateMutability": "nonpayable", "inputs": [{"name": "owner", "type": "address"}, {"name": "spender", "type": "address"}, {"name": "amount", "type": "uint256"}, {"name": "expiry", "type": "uint256"}, {"name": "signature", "type": "bytes"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "totalSupply", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "balanceOf", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "allowance", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}, {"name": "arg1", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "owner", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "address"}]}, {"type": "function", "name": "isMinter", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "bool"}]}, {"type": "function", "name": "nonces", "stateMutability": "view", "inputs": [{"name": "arg0", "type": "address"}], "outputs": [{"name": "", "type": "uint256"}]}, {"type": "function", "name": "DOMAIN_SEPARATOR", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "bytes32"}]}], "userdoc": {"methods": {"burn(uint256)": {"notice": "Burns the supplied amount of tokens from the sender wallet."}, "mint(address,uint256)": {"notice": "Function to mint tokens"}, "permit(address,address,uint256,uint256,bytes)": {"notice": "Approves spender by owner's signature to expend owner's tokens. See https://eips.ethereum.org/EIPS/eip-2612."}}}, "devdoc": {"methods": {"approve(address,uint256)": {"params": {"spender": "The address that will execute on owner behalf.", "amount": "The amount of token to be transfered."}}, "burn(uint256)": {"params": {"amount": "The amount of token to be burned."}}, "mint(address,uint256)": {"params": {"receiver": "The address that will receive the minted tokens.", "amount": "The amount of tokens to mint."}, "returns": {"_0": "A boolean that indicates if the operation was successful."}}, "permit(address,address,uint256,uint256,bytes)": {"params": {"owner": "The address which is a source of funds and has signed the Permit.", "spender": "The address which is allowed to spend the funds.", "amount": "The amount of tokens to be spent.", "expiry": "The timestamp after which the Permit is no longer valid.", "signature": "A valid secp256k1 signature of Permit by owner encoded as r, s, v."}, "returns": {"_0": "True, if transaction completes successfully"}}}}}}}